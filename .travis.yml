---
# Add additional stages in the order of execution here, and then under the job:include: key
stages:
  - name: "lint"
  - name: "test"
  - name: "verify_pypi_release"
    if: "tag IS present"
  - name: "deploy_github"
    if: "tag IS present"
  - name: "deploy_pypi"
    if: "tag IS present"

language: "python"

env:
  global:
    - "INVOKE_LOCAL=True"
  matrix:
    - "PYTHON_VER=3.6"
    - "PYTHON_VER=3.7"
    - "PYTHON_VER=3.8"
    - "PYTHON_VER=3.9"
before_script:
  - "pip install --upgrade pip"
  - "pip install invoke poetry toml"
  - "poetry config virtualenvs.create false"
  - "poetry install --no-interaction"
script:
  - "invoke pytest"

jobs:
  include:
    - stage: "lint"
      env:
        - "INVOKE_LOCAL=True"
      before_script:
        - "pip install --upgrade pip"
        - "pip install invoke poetry toml"
        - "poetry config virtualenvs.create false"
        - "poetry install --no-interaction"
      script:
        - "invoke black"
        - "invoke bandit"  # Bandit fails to function on > Py3.8 https://github.com/PyCQA/bandit/issues/639
        - "invoke pydocstyle"
        - "invoke flake8"
        - "invoke yamllint"
        - "invoke pylint"
    - stage: "verify_pypi_release"
      before_script:
        - "pip install --upgrade pip"
        - "pip install invoke poetry toml"
        - "poetry config virtualenvs.create false"
        - "poetry install --no-interaction"
      script:
        - "invoke check-pypi-version"
    - stage: "deploy_github"
      before_script:
        - "pip install --upgrade pip"
        - "pip install poetry"
      script:
        - "echo Deploying the release to GitHub"
        - "poetry version $TRAVIS_TAG"
        - "poetry build"
      deploy:
        provider: "releases"
        api_key: "$GITHUB_AUTH_TOKEN"
        file_glob: true
        file: "dist/*"
        skip_cleanup: true
        "on":
          all_branches: true
    - stage: "deploy_pypi"
      before_script:
        - "pip install --upgrade pip"
        - "pip install poetry"
      script:
        - "echo Deploying the release to PyPI"
        - "poetry version $TRAVIS_TAG"
      deploy:
        provider: "script"
        skip_cleanup: true
        script: "poetry publish --build -u __token__ -p $PYPI_TOKEN"
        "on":
          all_branches: true
